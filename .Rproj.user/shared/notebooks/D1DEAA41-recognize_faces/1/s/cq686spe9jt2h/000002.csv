"0","parent_input <- layer_input(shape = c(224, 224, 3), "
"0","                            name = 'parent_input')"
"0",""
"0","child_input <- layer_input(shape = c(224, 224, 3), "
"0","                           name = 'child_input')"
"0"," "
"0","parent <-parent_input %>% "
"0","  layer_conv_2d(filters = 32,"
"0","                kernel_size = c(3, 3),"
"0","                activation = 'relu') %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_conv_2d(filters = 64, "
"0","                kernel_size = c(3, 3),"
"0","                activation = ""relu"",) %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_conv_2d(filters = 128, "
"0","                kernel_size = c(3, 3),"
"0","                activation = ""relu"",) %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_conv_2d(filters = 128, "
"0","                kernel_size = c(3, 3),"
"0","                activation = ""relu"",) %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_flatten()"
"0",""
"0","child <- child_input %>% "
"0","  layer_conv_2d(filters = 32,"
"0","                kernel_size = c(3, 3),"
"0","                activation = 'relu') %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_conv_2d(filters = 64, "
"0","                kernel_size = c(3, 3),"
"0","                activation = ""relu"",) %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_conv_2d(filters = 128, "
"0","                kernel_size = c(3, 3),"
"0","                activation = ""relu"",) %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_conv_2d(filters = 128, "
"0","                kernel_size = c(3, 3),"
"0","                activation = ""relu"",) %>% "
"0","  layer_max_pooling_2d(pool_size = c(2, 2)) %>% "
"0","  layer_flatten()"
"0",""
"0","predictions <- layer_concatenate(c(parent, child)) %>%"
"0","  layer_dropout(rate = 0.5) %>%"
"0","  layer_dense(units = 512, activation = ""relu"") %>%"
"0","  layer_dense(units = 1, activation = ""sigmoid"")"
"0",""
"0","model <- keras_model(inputs = c(parent_input, child_input), "
"0","                     outputs = predictions)"
"0",""
"0",""
"0","model %>% compile("
"0","  optimizer = optimizer_rmsprop(lr = 1e-4),"
"0","  loss = 'binary_crossentropy',"
"0","  metrics = c('accuracy')"
"0",")"
